{"ast":null,"code":"var _s = $RefreshSig$();\nexport default function Restore() {\n  _s();\n  const [withdrawMembers, setWithdrawMembers] = useState(null); // 탈퇴회원목록\n  const [deleteBoards, setDeleteBoards] = useState(null); // 삭제게시글목록\n  const [menu, setMenu] = useState(1); // 1:복구, 2: 통계, 3:관리자메뉴\n\n  // 탈퇴한 회원 목록 조회용 비동기 요청 함수\n  const getWithdrawnMemberList = () => {\n    fetch('/admin/withdrawnMemberList').then(response => response.json()).then(data => {\n      if (data.length == 0) {\n        setWithdrawMembers(null);\n      } else {\n        setWithdrawMembers(data);\n      }\n      setLoading(false); // 로딩 상태 변경\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false); // 로딩 상태 변경\n    });\n  };\n\n  // 탈퇴한 회원 복구 비동기 요청 함수\n  const restoreMember = (e, member) => {\n    console.log(e);\n    console.log(member);\n    if (window.confirm(member.memberNickname + \"님을 탈퇴 복구 시키겠습니까?\")) {\n      fetch(\"/admin/restoreMember\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          memberNo: member.memberNo\n        })\n      }).then(res => res.text()).then(result => {\n        alert(\"복구 되었습니다\");\n        getWithdrawnMemberList();\n      });\n    } else {\n      alert(\"취소\");\n    }\n  };\n\n  // 삭제된 게시글 목록 조회용 비동기 요청 함수\n  const getDeleteBoardList = () => {\n    fetch('/admin/deleteBoardList').then(response => response.json()).then(data => {\n      console.log(\"data: \", data);\n      if (data.length == 0) {\n        setDeleteBoards(null);\n      } else {\n        setDeleteBoards(data);\n      }\n      setLoading(false); // 로딩 상태 변경\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false); // 로딩 상태 변경\n    });\n  };\n\n  // 삭제된 게시글 복구 비동기 요청 함수\n  const restoreBoard = (e, board) => {\n    console.log(e);\n    console.log(board);\n    if (window.confirm(board.boardNo + \"번 게시글을 복구 시키겠습니까?\")) {\n      fetch(\"/admin/restoreBoard\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          boardNo: board.boardNo\n        })\n      }).then(res => res.text()).then(result => {\n        alert(\"복구 되었습니다\");\n        getDeleteBoardList();\n      });\n    } else {\n      alert(\"취소\");\n    }\n  };\n\n  // 컴포넌트가 렌더링 될 때마다 side effect를 실행\n  useEffect(() => {\n    getWithdrawnMemberList();\n    getDeleteBoardList();\n  }, []);\n  const [loading, setLoading] = useState(true); // 로딩 상태\n}\n_s(Restore, \"kk3mhX6VPpHtCFOTl/68YXmE72Q=\");\n_c = Restore;\nvar _c;\n$RefreshReg$(_c, \"Restore\");","map":{"version":3,"names":["Restore","_s","withdrawMembers","setWithdrawMembers","useState","deleteBoards","setDeleteBoards","menu","setMenu","getWithdrawnMemberList","fetch","then","response","json","data","length","setLoading","catch","error","console","restoreMember","e","member","log","window","confirm","memberNickname","method","headers","body","JSON","stringify","memberNo","res","text","result","alert","getDeleteBoardList","restoreBoard","board","boardNo","useEffect","loading","_c","$RefreshReg$"],"sources":["C:/workspace/React/boardproject-admin-react/src/components/Restore.js"],"sourcesContent":["\r\nexport default function Restore() {\r\n\r\n    const [withdrawMembers, setWithdrawMembers] = useState(null);  // 탈퇴회원목록\r\n    const [deleteBoards, setDeleteBoards] = useState(null);  // 삭제게시글목록\r\n    const [menu, setMenu] = useState(1); // 1:복구, 2: 통계, 3:관리자메뉴\r\n  \r\n    // 탈퇴한 회원 목록 조회용 비동기 요청 함수\r\n    const getWithdrawnMemberList = () => {\r\n      fetch('/admin/withdrawnMemberList')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n        if(data.length == 0) {\r\n          setWithdrawMembers(null);\r\n        } else {\r\n          setWithdrawMembers(data);\r\n        }\r\n        \r\n        setLoading(false); // 로딩 상태 변경\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false); // 로딩 상태 변경\r\n      });\r\n    }\r\n  \r\n    // 탈퇴한 회원 복구 비동기 요청 함수\r\n    const restoreMember = (e, member) => {\r\n      console.log(e);\r\n      console.log(member);\r\n  \r\n      if(window.confirm(member.memberNickname + \"님을 탈퇴 복구 시키겠습니까?\")) {\r\n        fetch(\"/admin/restoreMember\", {\r\n          method : \"PUT\",\r\n          headers : {\"Content-Type\" : \"application/json\"},\r\n          body : JSON.stringify({ memberNo: member.memberNo })\r\n        })\r\n        .then(res => res.text())\r\n        .then(result => {\r\n          alert(\"복구 되었습니다\");\r\n          getWithdrawnMemberList();\r\n        })\r\n      } else{\r\n        alert(\"취소\");\r\n      }\r\n    }\r\n  \r\n    // 삭제된 게시글 목록 조회용 비동기 요청 함수\r\n    const getDeleteBoardList = () => {\r\n      fetch('/admin/deleteBoardList')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n  \r\n        console.log(\"data: \", data);\r\n  \r\n        if(data.length == 0) {\r\n          setDeleteBoards(null);\r\n        } else {\r\n          setDeleteBoards(data);\r\n        }\r\n  \r\n        setLoading(false); // 로딩 상태 변경\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false); // 로딩 상태 변경\r\n      });\r\n    }\r\n  \r\n    // 삭제된 게시글 복구 비동기 요청 함수\r\n    const restoreBoard = (e, board) => {\r\n      console.log(e);\r\n      console.log(board);\r\n  \r\n      if(window.confirm(board.boardNo + \"번 게시글을 복구 시키겠습니까?\")) {\r\n        fetch(\"/admin/restoreBoard\", {\r\n          method : \"PUT\",\r\n          headers : {\"Content-Type\" : \"application/json\"},\r\n          body : JSON.stringify({ boardNo: board.boardNo })\r\n        })\r\n        .then(res => res.text())\r\n        .then(result => {\r\n          alert(\"복구 되었습니다\");\r\n          getDeleteBoardList();\r\n        })\r\n      } else{\r\n        alert(\"취소\");\r\n      }\r\n    }\r\n  \r\n    // 컴포넌트가 렌더링 될 때마다 side effect를 실행\r\n    useEffect(() => {\r\n      getWithdrawnMemberList();\r\n      getDeleteBoardList();\r\n    }, []);\r\n  \r\n    \r\n  const [loading, setLoading] = useState(true); // 로딩 상태\r\n   \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}