{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\React\\\\boardproject-admin-react\\\\src\\\\components\\\\DashBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport '../css/DashBoard.css';\nimport { UserContext } from \"../App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashBoard() {\n  _s();\n  const globalState = useContext(UserContext);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // 비동기 요청(fetch 등)을 보내고 데이터를 가져옴\n    fetch('/admin/withdrawnMemberList').then(response => response.json()).then(data => {\n      // 데이터를 상태에 저장\n      setData(data);\n      setLoading(false); // 로딩 상태 변경\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setLoading(false); // 로딩 상태 변경\n    });\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAD00\\uB9AC\\uC790 \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC7AC \\uC811\\uC18D \\uAD00\\uB9AC\\uC790 : \", globalState.user.memberNickname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-border\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD0C8\\uD1F4 \\uD68C\\uC6D0 \\uBCF5\\uAD6C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-border\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC0AD\\uC81C \\uAC8C\\uC2DC\\uAE00 \\uBCF5\\uAD6C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(DashBoard, \"zV2Dd5h3XPM/E4ELeE+wOVaph0Y=\");\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["React","useState","useContext","useEffect","UserContext","jsxDEV","_jsxDEV","DashBoard","_s","globalState","data","setData","loading","setLoading","fetch","then","response","json","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user","memberNickname","_c","$RefreshReg$"],"sources":["C:/workspace/React/boardproject-admin-react/src/components/DashBoard.js"],"sourcesContent":["import React, { useState , useContext, useEffect } from 'react';\r\nimport '../css/DashBoard.css';\r\nimport { UserContext } from \"../App.js\";\r\n\r\nfunction DashBoard() {\r\n\r\n  const globalState = useContext(UserContext);\r\n\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 비동기 요청(fetch 등)을 보내고 데이터를 가져옴\r\n    fetch('/admin/withdrawnMemberList')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // 데이터를 상태에 저장\r\n        setData(data);\r\n        setLoading(false); // 로딩 상태 변경\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false); // 로딩 상태 변경\r\n      });\r\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\r\n\r\n\r\n  return (\r\n      <div className='dash-board-container'>\r\n        <p>관리자 페이지</p>\r\n        <p>현재 접속 관리자 : {globalState.user.memberNickname}</p>\r\n        \r\n          {\r\n            loading ?\r\n            <div>Loading...</div>\r\n            :\r\n            <div className='menu-box'>\r\n              <section className='section-border'>\r\n                <h3>탈퇴 회원 복구</h3>\r\n              </section>\r\n    \r\n              <section className='section-border'>  \r\n                <h3>삭제 게시글 복구</h3>\r\n              </section>\r\n            </div>\r\n          }\r\n       \r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default DashBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/D,OAAO,sBAAsB;AAC7B,SAASC,WAAW,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB,MAAMC,WAAW,GAAGP,UAAU,CAACE,WAAW,CAAC;EAE3C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACL,IAAI,IAAI;MACZ;MACAC,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR,oBACIP,OAAA;IAAKe,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnChB,OAAA;MAAAgB,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACdpB,OAAA;MAAAgB,QAAA,GAAG,iDAAY,EAACb,WAAW,CAACkB,IAAI,CAACC,cAAc;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGhDd,OAAO,gBACPN,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAErBpB,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBhB,OAAA;QAASe,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eACjChB,OAAA;UAAAgB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAEVpB,OAAA;QAASe,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eACjChB,OAAA;UAAAgB,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIP,CAAC;AAEZ;AAAClB,EAAA,CA9CQD,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAgDlB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}