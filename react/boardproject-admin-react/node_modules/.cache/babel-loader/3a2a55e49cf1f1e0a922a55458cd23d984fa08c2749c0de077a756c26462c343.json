{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\React\\\\boardproject-admin-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport DashBoard from \"./components/DashBoard\";\nimport { UserContext } from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState({\n    memberEmail: \"\",\n    memberNickname: \"\"\n  });\n  const [isLogin, setIsLogin] = useState(localStorage.getItem(\"isLogin\"));\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // 이메일 입력 받아 상태에 세팅\n  const changeInputEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  // 비밀번호 입력 받아 상태에 세팅\n  const changeInputPw = e => {\n    setPassword(e.target.value);\n  };\n\n  // submit 시 작동\n  const handleSubmit = e => {\n    // 기본 submit 이벤트 막기\n    e.preventDefault();\n\n    // login api 호출\n    fetch(\"/admin/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        memberEmail: email,\n        memberPw: password\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setUser({\n        memberEmail: result.memberEmail,\n        memberNickname: result.memberNickname\n      });\n      localStorage.setItem(\"isLogin\", \"true\");\n      setIsLogin(\"true\");\n    });\n  };\n\n  // user라는 객체에 상태와, 함수를 묶어서 \n  // Provider를 통해 하위 컴포넌트로 데이터 전달함\n  const userData = {\n    user: user,\n    email: email,\n    password: password,\n    changeInputEmail: changeInputEmail,\n    changeInputPw: changeInputPw,\n    handleSubmit: handleSubmit\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: userData,\n      children: isLogin == \"true\" ? /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n        value: userData,\n        children: /*#__PURE__*/_jsxDEV(DashBoard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bqAaOukZ9D4ySFD6TM2Tmq6NPGs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Login","DashBoard","UserContext","jsxDEV","_jsxDEV","App","_s","user","setUser","memberEmail","memberNickname","isLogin","setIsLogin","localStorage","getItem","email","setEmail","password","setPassword","changeInputEmail","e","target","value","changeInputPw","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","memberPw","then","res","json","result","console","log","setItem","userData","children","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/workspace/React/boardproject-admin-react/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport DashBoard from \"./components/DashBoard\";\nimport { UserContext } from \"./components/Login\";\n\nfunction App() {\n\n  const [user, setUser] = useState({\n    memberEmail: \"\",\n    memberNickname : \"\"\n  });\n  const [isLogin, setIsLogin] = useState(localStorage.getItem(\"isLogin\"));\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // 이메일 입력 받아 상태에 세팅\n  const changeInputEmail = (e) => {\n    setEmail(e.target.value);\n  }\n  \n  // 비밀번호 입력 받아 상태에 세팅\n  const changeInputPw = (e) => {\n    setPassword(e.target.value);\n  }\n\n  // submit 시 작동\n  const handleSubmit = (e) => {\n    // 기본 submit 이벤트 막기\n    e.preventDefault();\n    \n    // login api 호출\n    fetch(\"/admin/login\", {\n      method : \"POST\",\n      headers : {\"Content-Type\" : \"application/json\"},\n      body : JSON.stringify({\n        memberEmail : email, \n        memberPw : password\n      })\n    })\n    .then(res => res.json())\n    .then(result => {\n      console.log(result);\n      setUser({ memberEmail : result.memberEmail, \n              memberNickname : result.memberNickname});\n\n  \n      localStorage.setItem(\"isLogin\", \"true\");\n      setIsLogin(\"true\");\n      \n    });\n  }\n\n  // user라는 객체에 상태와, 함수를 묶어서 \n  // Provider를 통해 하위 컴포넌트로 데이터 전달함\n  const userData = {\n    user : user,\n    email : email,\n    password : password, \n    changeInputEmail : changeInputEmail,\n    changeInputPw : changeInputPw,\n    handleSubmit : handleSubmit\n  }\n  \n  return (\n    <div>\n      <UserContext.Provider value={userData}>\n        {\n          isLogin == \"true\" ?\n          <UserContext.Provider value={userData}>\n            <DashBoard />\n          </UserContext.Provider>\n          :\n          <Login />\n        }\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}